// <auto-generated />
using System;
using Assignment_Chsarp5_datntph19899._1_DataProcessing._3_Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assignment_Chsarp5_datntph19899.Migrations
{
    [DbContext(typeof(Assignment_Context))]
    [Migration("20230520055025_demo1")]
    partial class demo1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Bill", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.BillDetail", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BillID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FoodID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BillID");

                    b.HasIndex("FoodID");

                    b.ToTable("BillDetails");
                });

            modelBuilder.Entity("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Category", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid>("FoodID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("ID");

                    b.ToTable("Categorys");
                });

            modelBuilder.Entity("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Combo", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ComboName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid>("FoodID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Combos");
                });

            modelBuilder.Entity("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Coupons", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComboID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Coupon_Code")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("Create_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discount_Amount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discount_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Expiration_Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FoodID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Maximum_Discount_Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Minimum_Spend")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Update_At")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Express_Delivery", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Actual_Delivery_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Delivery_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Delivery_Status")
                        .HasColumnType("int");

                    b.Property<Guid>("IDBill")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Payment_Status")
                        .HasColumnType("int");

                    b.Property<string>("Receiver_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Receiver_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sender_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sender_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Shipping_Cost")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("express_Deliveries");
                });

            modelBuilder.Entity("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Food", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(526)
                        .HasColumnType("nvarchar(526)");

                    b.Property<string>("FoodName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("ReviewsID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("ReviewsID");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Order", b =>
                {
                    b.Property<Guid>("OrdelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrdelID");

                    b.HasIndex("UserID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.OrderDetail", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FoodID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OrderID");

                    b.ToTable("OrdelDetail");
                });

            modelBuilder.Entity("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Reviews", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FoodID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Role", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(526)
                        .HasColumnType("nvarchar(526)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Users", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(526)
                        .HasColumnType("nvarchar(526)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("IDRole")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("ID");

                    b.HasIndex("IDRole");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CategoryFood", b =>
                {
                    b.Property<Guid>("CategorysID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FoodID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CategorysID", "FoodID");

                    b.HasIndex("FoodID");

                    b.ToTable("CategoryFood");
                });

            modelBuilder.Entity("ComboCoupons", b =>
                {
                    b.Property<Guid>("ComboID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CouponsID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ComboID", "CouponsID");

                    b.HasIndex("CouponsID");

                    b.ToTable("ComboCoupons");
                });

            modelBuilder.Entity("ComboFood", b =>
                {
                    b.Property<Guid>("CombosID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FoodID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CombosID", "FoodID");

                    b.HasIndex("FoodID");

                    b.ToTable("ComboFood");
                });

            modelBuilder.Entity("CouponsFood", b =>
                {
                    b.Property<Guid>("CouponsID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FoodID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CouponsID", "FoodID");

                    b.HasIndex("FoodID");

                    b.ToTable("CouponsFood");
                });

            modelBuilder.Entity("FoodOrderDetail", b =>
                {
                    b.Property<Guid>("FoodID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderDetailsID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FoodID", "OrderDetailsID");

                    b.HasIndex("OrderDetailsID");

                    b.ToTable("FoodOrderDetail");
                });

            modelBuilder.Entity("ReviewsUsers", b =>
                {
                    b.Property<Guid>("ReviewsID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsersID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ReviewsID", "UsersID");

                    b.HasIndex("UsersID");

                    b.ToTable("ReviewsUsers");
                });

            modelBuilder.Entity("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Bill", b =>
                {
                    b.HasOne("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Users", "Users")
                        .WithMany("Bills")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.BillDetail", b =>
                {
                    b.HasOne("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Bill", "Bill")
                        .WithMany("BillDetails")
                        .HasForeignKey("BillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Food", "Food")
                        .WithMany("BillDetails")
                        .HasForeignKey("FoodID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Food");
                });

            modelBuilder.Entity("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Combo", b =>
                {
                    b.HasOne("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Category", null)
                        .WithMany("combos")
                        .HasForeignKey("CategoryID");
                });

            modelBuilder.Entity("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Express_Delivery", b =>
                {
                    b.HasOne("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Bill", "Bill")
                        .WithOne("Express_Delivery")
                        .HasForeignKey("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Express_Delivery", "ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Food", b =>
                {
                    b.HasOne("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Reviews", null)
                        .WithMany("Food")
                        .HasForeignKey("ReviewsID");
                });

            modelBuilder.Entity("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Order", b =>
                {
                    b.HasOne("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Users", "Users")
                        .WithMany("Orders")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.OrderDetail", b =>
                {
                    b.HasOne("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Order", "Order")
                        .WithMany("OrderDetail")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Users", b =>
                {
                    b.HasOne("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("IDRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CategoryFood", b =>
                {
                    b.HasOne("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Category", null)
                        .WithMany()
                        .HasForeignKey("CategorysID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Food", null)
                        .WithMany()
                        .HasForeignKey("FoodID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ComboCoupons", b =>
                {
                    b.HasOne("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Combo", null)
                        .WithMany()
                        .HasForeignKey("ComboID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Coupons", null)
                        .WithMany()
                        .HasForeignKey("CouponsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ComboFood", b =>
                {
                    b.HasOne("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Combo", null)
                        .WithMany()
                        .HasForeignKey("CombosID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Food", null)
                        .WithMany()
                        .HasForeignKey("FoodID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CouponsFood", b =>
                {
                    b.HasOne("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Coupons", null)
                        .WithMany()
                        .HasForeignKey("CouponsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Food", null)
                        .WithMany()
                        .HasForeignKey("FoodID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FoodOrderDetail", b =>
                {
                    b.HasOne("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Food", null)
                        .WithMany()
                        .HasForeignKey("FoodID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.OrderDetail", null)
                        .WithMany()
                        .HasForeignKey("OrderDetailsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReviewsUsers", b =>
                {
                    b.HasOne("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Reviews", null)
                        .WithMany()
                        .HasForeignKey("ReviewsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Users", null)
                        .WithMany()
                        .HasForeignKey("UsersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Bill", b =>
                {
                    b.Navigation("BillDetails");

                    b.Navigation("Express_Delivery")
                        .IsRequired();
                });

            modelBuilder.Entity("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Category", b =>
                {
                    b.Navigation("combos");
                });

            modelBuilder.Entity("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Food", b =>
                {
                    b.Navigation("BillDetails");
                });

            modelBuilder.Entity("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Order", b =>
                {
                    b.Navigation("OrderDetail");
                });

            modelBuilder.Entity("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Reviews", b =>
                {
                    b.Navigation("Food");
                });

            modelBuilder.Entity("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Assignment_Chsarp5_datntph19899._1_DataProcessing._1_Models.Users", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
